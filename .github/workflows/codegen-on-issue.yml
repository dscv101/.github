name: Codegen (on Issue)

on:
  issues:
    types: [opened, edited, labeled]
  workflow_dispatch:
    inputs:
      wait:
        description: "Wait for completion?"
        type: boolean
        default: true

jobs:
  parse:
    runs-on: ubuntu-latest
    outputs:
      prompt:     ${{ steps.out.outputs.prompt }}
      spec_path:  ${{ steps.out.outputs.spec_path }}
      should_run: ${{ steps.out.outputs.should_run }}
    steps:
      - name: Parse issue â†’ prompt/spec
        id: out
        shell: bash
        run: |
          set -e
          LABELS=$(jq -r '.issue.labels[].name' "$GITHUB_EVENT_PATH" | tr '\n' ' ')
          BODY=$(jq -r '.issue.body // ""' "$GITHUB_EVENT_PATH")
          TITLE=$(jq -r '.issue.title' "$GITHUB_EVENT_PATH")

          # Run only if label 'codegen' OR slash-command present
          if [[ "$LABELS" == *"codegen"* || "$BODY" == *"/run-codegen"* ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

          # Prefer fenced ```prompt blocks; else title+body
          PROMPT_BLOCK=$(awk '/^```prompt/{flag=1;next}/^```/{flag=0}flag' <<< "$BODY" || true)
          if [ -z "$PROMPT_BLOCK" ]; then
            {
              echo "prompt<<'EOF'"
              echo "$TITLE"
              echo
              echo "$BODY"
              echo "EOF"
            } >> $GITHUB_OUTPUT
          else
            {
              echo "prompt<<'EOF'"
              echo "$PROMPT_BLOCK"
              echo "EOF"
            } >> $GITHUB_OUTPUT
          fi

          # spec_path from 'spec_path: ...' or 'Spec: ...'
          SPEC_PATH=$(printf "%s\n" "$BODY" | awk -F': ' '/^spec_path:|^Spec:/{print $2; exit}' || true)
          echo "spec_path=${SPEC_PATH}" >> $GITHUB_OUTPUT

  call-reusable:
    if: ${{ needs.parse.outputs.should_run == 'true' || github.event_name == 'workflow_dispatch' }}
    needs: parse
    uses: dscv101/.github/.github/workflows/codegen-agentos.yml@main
    permissions:
      contents: read
    secrets:
      CODEGEN_ORG_ID:  ${{ secrets.CODEGEN_ORG_ID }}
      CODEGEN_TOKEN:   ${{ secrets.CODEGEN_TOKEN }}
      CODEGEN_REPO_ID: ${{ secrets.CODEGEN_REPO_ID }}
    with:
      target_repo:    ${{ github.repository }}
      require_agentos: true
      python_version: "3.12"
      wait:           ${{ inputs.wait }}
      prompt:         ${{ needs.parse.outputs.prompt }}
      spec_path:      ${{ needs.parse.outputs.spec_path }}
      # specs_glob: ".agent-os/specs/*"   # optional override